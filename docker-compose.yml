# Base configuration for Airflow services
x-airflow-common: &airflow-common
  build: .
  user: "${AIRFLOW_UID:-50000}:0"
  env_file:
    - .env
  volumes:
    - ./airflow_lappis/airflow.cfg:${AIRFLOW_HOME}/airflow.cfg
    - ./airflow_lappis/dags:${AIRFLOW_HOME}/dags/
    - ./airflow_lappis/plugins:${AIRFLOW_HOME}/plugins/
    - ./airflow_lappis/helpers:${AIRFLOW_HOME}/helpers/
    - ./airflow_lappis/dags/dbt/ipea/profiles.yml:${AIRFLOW_HOME}/.dbt/profiles.yml
    - ./airflow_lappis/configs:${AIRFLOW_HOME}/configs/
  depends_on: &airflow-common-depends-on
    postgres:
      condition: service_healthy

# Common environment variables for Airflow
x-airflow-environment: &airflow-common-env
  AIRFLOW__CORE__DEFAULT_TIMEZONE: 'America/Sao_Paulo'
  AIRFLOW__CORE__ENABLE_XCOM_PICKLING: 'true'
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
  AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
  AIRFLOW__CORE__TEST_CONNECTION: Enabled
  AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth
  AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres/airflow
  AIRFLOW__EMAIL__DEFAULT_EMAIL_ON_RETRY: 'false'
  AIRFLOW__EMAIL__DEFAULT_EMAIL_ON_FAILURE: 'false'
  AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: 'America/Sao_Paulo'
  AIRFLOW__WEBSERVER__INSTANCE_NAME: "Ipea - Local Dev!"
  AIRFLOW__WEBSERVER__NAVBAR_COLOR: '#98DFFF'
  AIRFLOW__WEBSERVER__RELOAD_ON_PLUGIN_CHANGE: 'true'
  AIRFLOW__WEBSERVER__SECRET_KEY: '42'
  PYTHONPATH: "/opt/airflow/dags:/opt/airflow/plugins:/opt/airflow/helpers:$PYTHONPATH"
  _AIRFLOW_DB_MIGRATE: 'true'
  _AIRFLOW_WWW_USER_CREATE: 'true'
  _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
  _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
  AIRFLOW__CORE__PLUGINS_FOLDER: ${AIRFLOW_HOME}/plugins
  AIRFLOW__CORE__DAGS_FOLDER: ${AIRFLOW_HOME}/dags
  AIRFLOW_REPO_BASE: ${AIRFLOW_HOME}
  # A ENV AIRFLOW_REPO_BASE É IMPORTANTE PARA SINCRONIZAR COM O SISTEMA DE PASTAS
  # DO AIRFLOW EM HOMOLOG E PROD, ELES POSSUEM UMA ESTRUTURA DE PASTAS DIFERENTE
  # USAR ESSA ENV NOS CÓDIGOS PARA NÃO HAVER CONFLITOS
  
services:
  # Airflow Services
  airflow:
    <<: *airflow-common
    # Usamos o comando de standalone aqui para não rodar múltiplos containers
    # do airflow localmente e assim melhorar a velocidade inicialização
    # doc do standalone: https://airflow.apache.org/docs/apache-airflow/2.8.1/start.html
    command: standalone
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 60s
      start_period: 60s
      retries: 5
    restart: always
    environment:
      <<: *airflow-common-env

  # Postgres database
  postgres:
    image: postgres:15-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./docker/postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  # Analytics Tools
  superset:
    image: apache/superset:latest
    environment:
      SUPERSET_SECRET_KEY: 'supersetadmin'
      SUPERSET_ENV: development
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/superset
    ports:
      - "8088:8088"
    depends_on:
      - postgres
    command: >
      /bin/sh -c "
      superset fab create-admin --username admin --firstname Admin --lastname User --email admin@superset.com --password admin &&
      superset db upgrade &&
      superset init &&
      superset run -p 8088 -h 0.0.0.0 --with-threads --reload --debugger
      "

  jupyter:
    image: jupyter/base-notebook:latest
    command: >
      jupyter lab 
      --ip=0.0.0.0 
      --no-browser 
      --allow-root 
      --NotebookApp.token='' 
      --NotebookApp.password=''
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/notebooks
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    restart: always

volumes:
  postgres-db:
  airflow_logs:
