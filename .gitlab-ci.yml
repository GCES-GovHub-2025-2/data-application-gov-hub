image: python:3.11-slim

variables:
  POETRY_HOME: "/opt/poetry"
  POETRY_VERSION: "1.8.5"
  POETRY_VIRTUALENVS_IN_PROJECT: "true"
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/poetry"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DBT_PROJECT_DIR: "${CI_PROJECT_DIR}/plugins/dbt"
  GIT_CI_USER: "ci bot"
  GIT_CI_EMAIL: "ci.lappis.rocks@gmail.com"

cache:
  paths:
    - .cache/poetry
    - .cache/pip
    - .venv

stages:
  - lint
  - test

.install-poetry:
  before_script:
    - apt-get update
    - apt-get -y install make
    - pip install poetry==${POETRY_VERSION}
    - poetry install --no-root --with dev
    - source $(poetry env info --path)/bin/activate

lint:
  stage: lint
  extends: .install-poetry
  script:
    - make lint
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

test:
  stage: test
  extends: .install-poetry
  script:
    - poetry run pytest tests --junitxml=report.xml
  coverage: '/TOTAL.*?(\d+%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: report.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
